import"./CAiHesYC.js";import{c as d}from"./DbkWBzhK.js";import{d as i,u as l,t as u,C as h,A as r,x as t,B as a,z as s,E as c}from"./BNR0s-aw.js";import{V as o}from"./uP5liIsv.js";import{V as m}from"./BBsIfCse.js";import{V as f}from"./DPFn2hNL.js";import"./DTK_wLMk.js";/* empty css        */import"./Diq8BEse.js";const y=["src",".adapter"],b=["src"],$=i({__name:"nav-sync-path",setup(x){const p=d(l());return(n,e)=>(u(),h(f,null,{default:r(()=>[e[0]||(e[0]=t("h1",{class:"text-h3 mb-6"}," Navigation syncing with path ",-1)),e[1]||(e[1]=t("p",null,[a(" If the navigation inside the frame includes path changes and you want to reflect this in the parent URL too, you can use the "),t("code",null,"sync-path"),a(' attribute. If empty the path parameter will be named "p", it you set a value to the attribute it will be used as parameter name. ')],-1)),e[2]||(e[2]=t("p",{class:"my-4"},[a(" This example uses "),t("code",null,'sync-path="path1"'),a(" and "),t("code",null,'sync-path="path2"'),a(" attributes. ")],-1)),s(m,null,{default:r(()=>[s(o,null,{default:r(()=>[t("d-frame",{src:`${n.$config.app.baseURL}children/nav-sync-path/`,style:{"max-width":"300px"},resize:"","sync-path":"path1",debug:"",".adapter":c(p),class:"border-dashed border-md border-text-info border-opacity-100 pa-2"},null,40,y)]),_:1}),s(o,null,{default:r(()=>[t("d-frame",{src:`${n.$config.app.baseURL}children/nav-sync-path/`,style:{"max-width":"300px"},resize:"","sync-path":"path2",class:"border-dashed border-md border-text-info border-opacity-100 pa-2"},null,8,b)]),_:1})]),_:1})]),_:1}))}});export{$ as default};
