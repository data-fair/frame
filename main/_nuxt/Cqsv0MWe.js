var s=Object.defineProperty;var d=(i,t,e)=>t in i?s(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e)=>d(i,typeof t!="symbol"?t+"":t,e);import{i as h}from"./BUDPeZol.js";const c=["animationstart","webkitAnimationStart","animationiteration","webkitAnimationIteration","animationend","webkitAnimationEnd","input","mouseup","mousedown","orientationchange","afterprint","beforeprint","readystatechange","touchstart","touchend","touchcancel","transitionstart","webkitTransitionStart","MSTransitionStart","oTransitionStart","otransitionstart","transitioniteration","webkitTransitionIteration","MSTransitionIteration","oTransitionIteration","otransitioniteration","transitionend","webkitTransitionEnd","MSTransitionEnd","oTransitionEnd","otransitionend","resize"];class g{constructor(){a(this,"pendingCheckHeight",!1);a(this,"debug",!1);a(this,"throttledCheckHeight");a(this,"lastHeight",0);const t=()=>{this.checkHeight(),this.pendingCheckHeight=!1};this.throttledCheckHeight=()=>{this.pendingCheckHeight||(this.pendingCheckHeight=!0,requestAnimationFrame(t))},!(typeof window>"u")&&(window.addEventListener("message",e=>this.onMessage(e)),this.postMessageToParent("init"))}log(t,...e){t==="debug"&&!this.debug||(t==="debug"&&console.debug("d-frame-content",...e),t==="info"&&console.info("d-frame-content",...e))}onMessage(t){if(t.source===window.parent&&typeof t.data=="object"&&t.data.dFrame==="parent"){const e=t.data;h(e)&&(this.debug=!!e.data.debug,this.init())}}postMessageToParent(t,e){const n={dFrame:"child",type:t,data:e};window.parent.postMessage(n)}init(){this.log("debug","init"),this.checkHeight(),this.createMutationObserver(),this.createWindowEventListeners()}createMutationObserver(){const t=document.querySelector("body");if(!t)throw new Error("DFrameContentManager was initialized before the HTML body");new window.MutationObserver(this.throttledCheckHeight).observe(t,{attributes:!1,attributeOldValue:!1,characterData:!1,characterDataOldValue:!1,childList:!0,subtree:!0})}createWindowEventListeners(){for(const t of c)window.addEventListener(t,this.throttledCheckHeight,{passive:!0})}checkHeight(){const t=document.querySelectorAll("[data-iframe-height]");let e=0;for(const n of t){const o=n.getAttribute("data-iframe-height");console.log("dataAttribute",o);const r=n.getBoundingClientRect().bottom+parseFloat(getComputedStyle(n).getPropertyValue("margin-bottom"))+(o?parseFloat(o):0);r>e&&(e=r)}e!==this.lastHeight&&(this.postMessageToParent("height",e),this.lastHeight=e)}}new g;
