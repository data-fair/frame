import{_ as c}from"./BLwA2wXj.js";import{_ as f}from"./DNa-WdqC.js";import"./C5K4C0OV.js";import{V as r}from"./BJtwO_ZM.js";import{V as m}from"./DBJ0EFcy.js";import{V as h}from"./DSTFmcMq.js";import{d as b,r as v,t as x,C as k,A as n,x as t,B as o,z as s,E as l,y as w}from"./2GtNo5G5.js";import"./DoLnX5WI.js";import"./DF0wGfdl.js";import"./kEr0N0kK.js";import"./WLeHKyBY.js";import"./Dhbhthhq.js";import"./DV3ZCpHz.js";import"./zI1tdITT.js";import"./3CDrnHPB.js";import"./BFapnbUl.js";import"./CbHEB2-S.js";import"./CAOBFEwo.js";import"./CL2nIQGv.js";import"./CvSSFb4B.js";import"./BfiA9UYn.js";import"./1X8650Co.js";import"./DTK_wLMk.js";/* empty css        */const y={class:"text-h3 mb-6"},_=["src"],$={class:"text-caption"},V=["src"],g=["src"],X=b({__name:"mouse-events",setup(C){const i=v([]);return(a,e)=>{const u=c,p=f;return x(),k(h,null,{default:n(()=>[t("h1",y,[e[4]||(e[4]=o(" Mouse events ")),e[5]||(e[5]=t("br",null,null,-1)),s(u)]),e[7]||(e[7]=t("p",null," User actions across iframes can lack some interaction support. ",-1)),e[8]||(e[8]=t("h2",{class:"text-h4 mt-8"}," Capturing click events ",-1)),e[9]||(e[9]=t("p",{class:"my-4"},[o(" This example uses the "),t("code",null,"mouse-events"),o(" attribute without a value to signal that the default events (click, dblclick, mousedown and mouseup) should be emitted when captured inside the iframe. It also defines event handler on the "),t("code",null,"d-frame"),o(" element to log those events. ")],-1)),s(m,null,{default:n(()=>[s(r,null,{default:n(()=>[t("d-frame",{src:`${a.$config.app.baseURL}children/mouse-events`,style:{"max-width":"250px"},class:"border-dashed border-md border-text-info border-opacity-100 pa-2","mouse-events":"",onClick:e[0]||(e[0]=d=>l(i).push("click")),onDblclick:e[1]||(e[1]=d=>l(i).push("dblclick")),onMousedown:e[2]||(e[2]=d=>l(i).push("mousedown")),onMouseup:e[3]||(e[3]=d=>l(i).push("mouseup"))},null,40,_)]),_:1}),s(r,null,{default:n(()=>[e[6]||(e[6]=t("h3",{class:"text-h6"}," Events ",-1)),t("span",$,w(l(i).join(", ")),1)]),_:1})]),_:1}),e[10]||(e[10]=t("h2",{class:"text-h4 mt-8"},' Usage with "click-outside" interactions ',-1)),e[11]||(e[11]=t("p",{class:"my-4"},[o(" This example illustrates how the "),t("code",null,"mouse-events"),o(" attribute can be used to provide compatibility with components that check if there was a click event outside of them. In this case the buttons use the "),t("code",null,"v-click-outside"),o(" directive from Vuetify. The first "),t("code",null,"d-frame"),o(" element has the "),t("code",null,"mouse-events"),o(" attribute and is therefore compatible with the button's expected behavior. The second "),t("code",null,"d-frame"),o(" element doesn't have the attribute and is not compatible. ")],-1)),s(m,null,{default:n(()=>[s(r,{class:"mt-7"},{default:n(()=>[s(p)]),_:1}),s(r,null,{default:n(()=>[t("d-frame",{src:`${a.$config.app.baseURL}children/mouse-events-outside`,style:{"max-width":"300px"},"mouse-events":"",class:"border-dashed border-md border-text-info border-opacity-100 pa-2"},null,8,V)]),_:1}),s(r,null,{default:n(()=>[t("d-frame",{src:`${a.$config.app.baseURL}children/mouse-events-outside`,style:{"max-width":"300px"},class:"border-dashed border-md border-text-info border-opacity-100 pa-2"},null,8,g)]),_:1})]),_:1})]),_:1})}}});export{X as default};
