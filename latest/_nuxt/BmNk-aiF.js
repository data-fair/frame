var u=Object.defineProperty;var c=(e,t,r)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var h=(e,t,r)=>c(e,typeof t!="symbol"?t+"":t,r);class p{constructor(t){h(this,"router");this.router=t}stateChange(t,r){var i,n;const s=((i=this.router.options)==null?void 0:i.base)??((n=this.router.options.history)==null?void 0:n.base);if(s==null)throw new Error("failed to access base path in router (no router.options.base nor router.options.history.base)");const a=window.location.origin+s;if(!r.href.startsWith(a))throw new Error("new URL does not start with base path");let o=r.href.replace(a,"");o.startsWith("/")||(o="/"+o),t==="push"&&this.router.push(o),t==="replace"&&this.router.replace(o)}onStateChange(t){this.router.afterEach(t)}}const l=e=>new p(e);export{l as c};
