import{_ as p}from"./XG3Dw1Io.js";import"./D-D5_PLT.js";import{V as r,a as u}from"./ByaAebBv.js";import{V as c}from"./TcKikk11.js";import{d as f,r as h,t as b,C as v,A as o,x as t,B as s,z as n,E as l,y as x}from"./E06ptF_r.js";import"./BGc6qz_h.js";import"./bkw9Clzj.js";import"./B1AEZqlz.js";import"./BF0xZBUh.js";import"./D0OJJf1t.js";import"./LraZzuIs.js";import"./Cu-HRvip.js";import"./CahtLKW1.js";import"./nAVETg3x.js";import"./CN_HbSdG.js";import"./Bd1WgpJe.js";import"./bidrHD89.js";import"./Bhgkug8Y.js";import"./1X8650Co.js";import"./DTK_wLMk.js";/* empty css        */const k=["src"],w={class:"text-caption"},y=["src"],$=["src"],J=f({__name:"mouse-events",setup(V){const i=h([]);return(a,e)=>{const m=p;return b(),v(c,null,{default:o(()=>[e[5]||(e[5]=t("h1",{class:"text-h3 mb-6"}," Mouse events ",-1)),e[6]||(e[6]=t("p",null," User actions across iframes can lack some interaction support. ",-1)),e[7]||(e[7]=t("h2",{class:"text-h4 mt-8"}," Capturing click events ",-1)),e[8]||(e[8]=t("p",{class:"my-4"},[s(" This example uses the "),t("code",null,"mouse-events"),s(" attribute without a value to signal that the default events (click, dblclick, mousedown and mouseup) should be emitted when captured inside the iframe. It also defines event handler on the "),t("code",null,"d-frame"),s(" element to log those events. ")],-1)),n(u,null,{default:o(()=>[n(r,null,{default:o(()=>[t("d-frame",{src:`${a.$config.app.baseURL}children/mouse-events`,style:{"max-width":"250px"},class:"border-dashed border-md border-text-info border-opacity-100 pa-2","mouse-events":"",onClick:e[0]||(e[0]=d=>l(i).push("click")),onDblclick:e[1]||(e[1]=d=>l(i).push("dblclick")),onMousedown:e[2]||(e[2]=d=>l(i).push("mousedown")),onMouseup:e[3]||(e[3]=d=>l(i).push("mouseup"))},null,40,k)]),_:1}),n(r,null,{default:o(()=>[e[4]||(e[4]=t("h3",{class:"text-h6"}," Events ",-1)),t("span",w,x(l(i).join(", ")),1)]),_:1})]),_:1}),e[9]||(e[9]=t("h2",{class:"text-h4 mt-8"},' Usage with "click-outside" interactions ',-1)),e[10]||(e[10]=t("p",{class:"my-4"},[s(" This example illustrates how the "),t("code",null,"mouse-events"),s(" attribute can be used to provide compatibility with components that check if there was a click event outside of them. In this case the buttons use the "),t("code",null,"v-click-outside"),s(" directive from Vuetify. The first "),t("code",null,"d-frame"),s(" element has the "),t("code",null,"mouse-events"),s(" attribute and is therefore compatible with the button's expected behavior. The second "),t("code",null,"d-frame"),s(" element doesn't have the attribute and is not compatible. ")],-1)),n(u,null,{default:o(()=>[n(r,{class:"mt-7"},{default:o(()=>[n(m)]),_:1}),n(r,null,{default:o(()=>[t("d-frame",{src:`${a.$config.app.baseURL}children/mouse-events-outside`,style:{"max-width":"300px"},"mouse-events":"",class:"border-dashed border-md border-text-info border-opacity-100 pa-2"},null,8,y)]),_:1}),n(r,null,{default:o(()=>[t("d-frame",{src:`${a.$config.app.baseURL}children/mouse-events-outside`,style:{"max-width":"300px"},class:"border-dashed border-md border-text-info border-opacity-100 pa-2"},null,8,$)]),_:1})]),_:1})]),_:1})}}});export{J as default};
